#!/bin/sh

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#											#
#	Copyright (c) 2023, Ian LeCorbeau <I-LeCorbeau (at) protonmail (dot) com>	#
#											#
#	Permission to use, copy, modify, and/or distribute this software for any	#
#	purpose with or without fee is hereby granted, provided that the above		#
#	copyright notice and this permission notice appear in all copies.		#
#											#
#	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES	#
#	WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF		#
#	MERCHANTABILITY AND FITNESS IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR		#
#	ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES		#
#	WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN		#
#	ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF		#
#	OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.			#
#											#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# Global Variables
TAR_NAME="$2"
SECKEY="$3"

# Functions
usage() {
	printf '%s\n' "
mktar -p|-t <tarball-name> [</path/to/seckey>]

Create a tarball of the ports tree or mkpkg's TARGET dir (default: /usr/packages).

Arguments 1 and 2 are non-optional, it has to be either:

-p <tarball-name>	tar mkpg's TARGET dir
-t <tarball-name>	tar the ports tree

When using the -t option, the script must be run from this repo's directory.

If a path to a signify seckey is given as argument 3, the tarball will be signed.
It is not recommended to skip the signing of the tarball unless there is no plan
to share it.
"
}

# Create tarball of the package directory
tar_pkgs() {
	bsdtar czf /home/"$USER"/"$TAR_NAME".tar.gz -C /usr/packages .
}

# Create a tarball of ports tree then sign with signify.
tar_tree() {
	bsdtar czf /home/"$USER"/"$TAR_NAME".tar.gz .
}

sign() {
	signify-openbsd -S -s "$SECKEY" -m /home/"$USER"/"$TAR_NAME".tar.gz -x /home/"$USER"/"$TAR_NAME".tar.gz.sig
	
}

case "$1" in
	-p) tar_pkgs ;;
	-t) tar_tree ;;
	*) usage ;;
esac

if [ -z "$2" ]; then
	printf '%s\n' "Only skip signing the tarball if there's is no plan to share it."
else
	sign
fi
